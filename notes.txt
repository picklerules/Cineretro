ligne de commande pour lancer mon projet react
npx create-react-app react-compteur 

lancer la compilation avec le task runner
npm start react-compteur

favicon generator pour créer un icone pour desktop, home page iphone etc

garder les fichiers src/
app.css
app.js
index.css
index.js
nettoyer pour avoir une page blanche 
App.js:
import './App.css';

function App() {
  return (
    <div>

    </div>
  );
}

export default App;

attribut css className pas class 

react n'accepte pas qu'il n'y est pas d'élément conteneur, je dois toujours absolulemnt avoir un conteneur dans le return
si je veux une conteneur qui ne créer pas une balise html genre div mettre des chevrons vides: <> et </>

dans src quand je change l'architecture de mes dossies je dois changer les path dans index.js


props est une propriété en react 

définir un component ou un props dans la parent
et je peux le récuperer dans lenfant 


handle pour faire remonter de l'enfant au parent



faire une maquette de page accueil statique 

films avec nom 

page grille de film 

et page show film 


TP2
ne pas envoyer les node module
utiliser BEM ou ITCSS pour le css ou autre chose
max font size pour que ce soit seamless (toutes les typographies)
page 404 je peux faire ce que je veux

pour installer le systeme de routing
npm install router dom 



Énoncé
À faire suite au cours 8
- Contenu statique Accueil (import json et non copier-coller dans Accueil.js)
- Route film/:id 
- Link (react-router-dom) pour chaque <TuileFilm /> (ref : https://knowbody.github.io/react-router-docs/api/Link.html)
- Composant Film
- Commencer votre CSS
- Route et composants 404



À faire suite au cours 9
- Dynamiser la page d'un film (useParams, ref : https://reactrouter.com/en/main/hooks/use-params)
- Ajouter un séparateur entre les genres du tableau de genres d'un film
- Mise en page composants et interactivité



À faire suite au cours 10
- Les autres filtres (une seule fonction), soit :
	- 'Titre alphabétique (A-Z)'
	- 'Titre alphabétique (Z-A)'
	- 'Réalisateur alphabétique (A-Z)'
	- 'Réalisateur alphabétique (Z-A)'
	- 'Par année (du plus récent)'
	- 'Par année (du plus ancien)'

	- Query string 
		- orderBy   
			- titre
			- realisation- annee

		- orderDirection
			- asc
			- desc

- Créer un composant Filtre
- Afficher filtre actif
- Par défaut, la tuile d'un film affiche l'image et le titre du film, afficher le réalisateur ou l'année si cette information est filtré



À faire suite au cours 11
- Dynamiser la valeur récupérée (de 1 à 5)    	
- Afficher la moyenne des votes (limitée à 2 chiffre suite au point) et le nombre de vote(s)
- Gestion vote / votes s'il y a plus d'un vote
- Si le film n'a reçu aucun vote, injecter le message 'Aucun vote enregistré' (ou autre)
- Mise à jour de la moyenne et du nombre de vote(s) suite à la soumission d'un vote
- Créer un composant Vote (ou Note)
- Interface engageante pour voter et afficher la moyenne / nombre de vote(s)



- Dynamiser le commentaire soumis à db
- (bonus) Créer un composant Commentaires
- Logging ou non, s'il y a un/des commentaire(s), affichez-le(s) (commentaire et auteur)
- Affichage de l'input lorsque logout et du nom de l'usager lorsque login
- Gestion Logout


//TODO:
À faire suite au cours 12
- Factoriser l'appel asynchrone pour l'ajout d'une note et d'un commentaire
- (bonus) Persévérance du logging au rechargement de page côté client à l'aide d'un localStorage




TEST UNITAIRE

npm test    est la commande pour lancer les test (fichier test.js)
je place le test dans son composant 


À faire suite au cours 13
- Test unitaire dans le composant Accueil pour vérifier si chaque paragraphe du contenu de l'accueil (Accueil.json) est présent dans le document
- Test unitaire dans le composant ListeFilms pour vérifier si les clés titre, genres, realisation, description, annee et titreVignette sont présentes pour chaque film reçu de l'API (appel fetch)
- Test unitaire dans le composant Film pour vérifier si la moyenne et le nombre de vote(s) affichés via le composant Vote (ou Note) sont présents dans le document

